{"version":3,"sources":["components/layout/Header.js","components/layout/FloatObj.js","components/NewPostModal.js","components/PostObj.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","useState","postInViewList","value","setValue","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","numPostInView","aria-labelledby","i","map","item","key","onClick","updateNumPostInView","renderDropDown","onSubmit","e","console","log","preventDefault","handleSearch","onChange","target","mainStyle","FloatObj","style","window","scrollTo","top","behavior","tabIndex","title","newPost","NewPostModal","text","setText","errorMsg","setErrorMsg","handleClose","setNewPostModalActive","newPostModalActive","aria-hidden","data-dismiss","paddingBottom","rows","userId","name","userName","txt","timeElapsed","Date","now","date","toLocaleDateString","margin","PostObj","post","index","completeTodo","removeTodo","React","user","comment","comments","setComments","handleFile","files","file","renderFile","textDecoration","isCompleted","fontSize","newTodos","class","placeholder","PostForm","addPost","floatObjStyle","position","bottom","right","paddingButton","containerStyle","marginTop","borderRadius","maxWidth","App","setNumPostInView","postId","posts","setPosts","newPosts","splice","newPostss","len","length","slice","renderPosts","event","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8d0ae397.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Header(props) {\n  const [postInViewList] = useState([5, 10, 20, 30]);\n  const [value, setValue] = useState(\"\");\n  const renderDropDown = () => {\n    var i = props.numPostInView;\n    return postInViewList.map((item,key) => {\n      if (item !== i) {\n        var value = item;\n        return (\n          <a\n            className=\"dropdown-item\"\n            onClick={() => props.updateNumPostInView(value)}\n            key={key}\n          >\n            {value}\n          </a>\n        );\n      }\n    });\n  };\n\n  const handleSearch = (e) => {\n    console.log(\"HEADER HANDLE SEARCH \" + value);\n    e.preventDefault();\n    if (!value) return;\n    props.handleSearch(value);\n    setValue(\"\");\n  };\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\">SOEN387 A2</a>\n\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item dropdown\">\n              <a\n                className=\"nav-link dropdown-toggle\"\n                id=\"navbarDropdown\"\n                role=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                {props.numPostInView}\n              </a>\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                {renderDropDown()}\n              </div>\n            </li>\n          </ul>\n          <div className=\"my-2 my-lg-0\">\n            <form onSubmit={handleSearch}>\n              <input\n                type=\"text\"\n                className=\"input\"\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                \n              />\n            </form>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react'\n\nfunction FloatObj(props){\n\n    const newPost = () => {\n        console.log(\"FLOATOBJ NEW POST\");\n        props.newPost()\n\n    }\n\n    return (\n    <div style={mainStyle} >\n        <div>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })} >Back to Top</button>\n        </div>\n        <div>&nbsp;</div>\n        <div>\n        <span className=\"d-inline-block\" tabIndex=\"0\" data-toggle=\"tooltip\" title=\"Disabled tooltip\">\n            <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\"  data-target={\"#newPostModal\"} onClick={() => newPost()} >New Post</button>\n        </span>\n        </div>\n    </div>\n    )\n  }\n// data-toggle=\"modal\" data-target=\"#newPostModal\"\n  const mainStyle ={ \n  }\n \n\n\n  export default FloatObj","import { render } from \"@testing-library/react\";\nimport React, { useState} from \"react\";\n\n// https://getbootstrap.com/docs/4.3/components/modal/\nfunction NewPostModal(props) {\n  const [text, setText] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const handleClose = () => {\n    console.log(\"HANDLE CLOSE\");\n    props.setNewPostModalActive(false);\n    console.log(\"newPostModalActive \" + props.newPostModalActive)\n  };\n\n  const handlePost = (e) => {\n    console.log(\"HANDLE POST\");\n    e.preventDefault();\n    console.log(\"[\" + text + \"]\");\n    if (!text) {\n      console.log(\"ERROR\");\n      setErrorMsg(\"Field is empty\");\n      console.log(errorMsg);\n      return;\n    } else {\n      console.log(\"OK\");\n    }\n\n    var id = props.userId;\n    var name = props.userName;\n    var txt = text;\n    const timeElapsed = Date.now();\n    const date = new Date(timeElapsed).toLocaleDateString();\n\n    console.log(id + \", \" + name + \", \" + txt + \", \" + date);\n    \n  }\n\n \n\n  const renderErrorMessage = () => {\n    return (\n      <div>{errorMsg}</div>\n    )\n  }\n\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"newPostModal\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">\n              New Post\n            </h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={handleClose}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n\n\n          <div className=\"modal-body\">\n            aaa\n            \n            \n            <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\" style={{paddingBottom:\"50px\"}}/>\n            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" onChange={(e) => setText(e.target.value)}></textarea>\n            {renderErrorMessage}\n          </div>\n\n\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n              onClick={handleClose}\n            >\n              Cancel\n            </button>\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={handlePost}>\n              Post\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst titleStyle = {\n  fontWeight: \"bold\",\n};\nconst hrStyle = {\n  marginTop: \"2px\",\n  marginBottom: \"2px\",\n};\nconst modalStyle = {\n  paddingTop: \"10px\",\n};\nconst modalContentStyle = {\n  minHeight: \"65vh\",\n};\nexport default NewPostModal;\n","import React, { useState } from \"react\";\n\nfunction PostObj({ post, index, completeTodo, removeTodo, userName }) {\n  const [value, setValue] = React.useState(\"\");\n  const [comments, setComments] = useState([\n    { user: \"user#1\", comment: \"wow\" },\n    { user: \"user#2\", comment: \"good shit\" },\n  ]);\n\n  const renderComments = () => {\n    return comments.map((comment, key) => (\n      <div key={key}> \n        <label className=\"font-weight-bold\">{comment.user}:</label>\n        &nbsp;{comment.comment}\n        \n      </div>\n    ));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    console.log(\"NEW COMMENT: \" + value);\n    const newTodos = [...comments, { user: userName, comment: value }];\n    setComments(newTodos);\n    setValue(\"\");\n    /* @UPDATE DB */\n  };\n\n  const renderFile = () => {\n    if(!post.files) return; \n    return post.files.map((file,key) => (\n      <span>\n        <li  onClick={(e) => handleFile()} className=\"list-group-item\">{file}</li>\n      </span>\n    ));\n  }\n\n  const handleFile = e => {\n    \n  }\n\n  return (\n    <div style={mainStyle}>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title\"><strong>{post.user}</strong></h4>\n          <h6 className=\"card-subtitle text-muted  mb-2\">{post.date}</h6>\n\n          <ul className=\"list-group list-group-flush mb-2\">\n              {renderFile()}\n          </ul>\n          \n          <p className=\"card-text\" style={{ textDecoration: post.isCompleted ? \"line-through\" : \"\" }} >{post.text}</p>\n          <hr/>\n          <div style={{ fontSize: \"15px\" }}>{renderComments()}</div>\n          <form onSubmit={handleSubmit}>\n            <input\n            class=\"form-control form-control-sm\"\n            placeholder=\"leave your comment...\"\n              type=\"text\"\n              value={value}\n              onChange={(e) => setValue(e.target.value)}\n            />\n          </form> \n\n\n            <button class=\"btn btn-primary btn-sm\" onClick={() => completeTodo(index)}>Complete</button>\n            <button class=\"btn btn-primary btn-sm\" onClick={() => removeTodo(index)}>delete</button>\n           \n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mainStyle = {\n  margin: \"0px\", \n  paddingBottom: \"10px\",\n};\n\nconst userProfileStyle = { \n  borderRadius:\"50%\",\n  fontSize:\"6px\",\n  width: \"20px\",\n  height: \"20px\",\n  textAlign: \"center\"\n}\n\nexport default PostObj;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\n/**\n * COMPONENTS\n */\nimport Header from \"./components/layout/Header\";\nimport FloatObj from \"./components/layout/FloatObj\";\nimport NewPostModal from \"./components/NewPostModal\";\nimport PostObj from \"./components/PostObj\";\n\nfunction PostForm({ addPost }) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addPost(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nfunction App() {\n  /**\n   * STATE\n   */\n  const [userName] = useState(\"Timmy\");\n  const [userId] = useState(\"001\");\n  const [newPostModalActive, setNewPostModalActive] = useState(false);\n  const [openPostModalActive, setOpenPostModalActive] = useState(false);\n  const [numPostInView, setNumPostInView] = useState(5);\n\n  const [posts, setPosts] = React.useState([\n    {\n      text: \"Learn about React\",\n      isCompleted: false,\n      user: \"Jim\",\n      date: \"09-April-2020\",\n      files: [\"a.txt\"],\n      postId: \"1\"\n    },\n    {\n      text: \"Meet friend for lunch\",\n      isCompleted: false,\n      user: \"Mohammed\",\n      date: \"09-Mars-2020\",\n      files: [\"c.txt\",\"d.txt\"],\n      postId: \"2\"\n    }\n  ]);\n\n  /**\n   * FUNCTION\n   */\n  const addPost = (text) => {\n    const newPostss = [...posts, { text }];\n    setPosts(newPostss);\n  };\n\n  const handleSearch = (text) => {\n    console.log(\"HANDLE SEARCH \" + text);\n  }\n\n  const newPost = (event) => {\n    console.log(\"NEW POST \" + newPostModalActive);\n    setNewPostModalActive(!newPostModalActive);\n    console.log(newPostModalActive)\n  };\n\n  const updateNumPostInView = (i) => {\n    console.log(\"New # item in view \" + i)\n    setNumPostInView(i);\n    console.log(\"NEW VALUE \" + numPostInView);\n  }\n\n\n  const completeTodo = (index) => {\n    const newPosts = [...posts];\n    if(newPosts[index].isCompleted==true){\n      newPosts[index].isCompleted = false;\n    } else {\n      newPosts[index].isCompleted = true;\n    }\n    setPosts(newPosts);\n  };\n\n  const removeTodo = (index) => {\n    const newPosts = [...posts];\n    newPosts.splice(index, 1);\n    setPosts(newPosts);\n  };\n\n  const renderPosts = () => {\n    var len = numPostInView;\n    if(posts.length<len) len = posts.length\n    console.log(\"RENDERING \" + len + \" POSTS\")\n    return posts.slice(0,len).map((post, index) => (\n      <PostObj\n        key={index}\n        index={index}\n        post={post}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        userName={userName}\n      />\n    ));\n  };\n\n  return (\n    <div className=\"app\">\n      <Header userName={userName} handleSearch={handleSearch} numPostInView={numPostInView} updateNumPostInView={updateNumPostInView} />\n      \n      \n      <PostForm addPost={addPost} /> \n      <div className=\"mx-auto\" style={containerStyle}> \n        {renderPosts()}\n      </div>\n      <div className=\"bt-new-post\"></div>\n      \n      \n\n      <div className=\"float-obj\" style={floatObjStyle}>\n        <FloatObj newPost={newPost} />\n      </div>\n\n      <NewPostModal\n        setNewPostModalActive={setNewPostModalActive}\n        newPostModalActive={newPostModalActive}\n        userName={userName}\n        userId={userId}\n      />\n       \n\n    </div>\n  );\n}\n\nconst floatObjStyle = {\n  position: \"fixed\",\n  bottom: \"10px\",\n  right: \"10px\",\n  paddingButton:\"50px\"\n};\n\nconst containerStyle = {\n  marginTop: \"10px\",\n  borderRadius: \"4px\",\n  maxWidth: \"500px\", \n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}